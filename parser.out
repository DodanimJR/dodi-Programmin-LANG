Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO

Grammar

Rule 0     S' -> A
Rule 1     A -> ALGORITMO ID PRINCIPAL INICIO instrucciones FIN
Rule 2     instrucciones -> instruccion instrucciones
Rule 3     instrucciones -> <empty>
Rule 4     asignacion -> ID = operacion
Rule 5     operacion -> <empty>
Rule 6     operacion -> operacion + operacion
Rule 7     operacion -> operacion - operacion
Rule 8     operacion -> operacion * operacion
Rule 9     operacion -> operacion / operacion
Rule 10    operacion -> operacion MAYORIGUAL operacion
Rule 11    operacion -> operacion MENORIGUAL operacion
Rule 12    operacion -> operacion IGUAL operacion
Rule 13    operacion -> operacion DIFERENTE operacion
Rule 14    operacion -> operacion < operacion
Rule 15    operacion -> operacion > operacion
Rule 16    operacion -> ( operacion )
Rule 17    operacion -> - operacion
Rule 18    operacion -> ID
Rule 19    operacion -> NUMEROENTERO
Rule 20    instruccion -> declaracion
Rule 21    instruccion -> asignacion
Rule 22    instruccion -> mientras
Rule 23    instruccion -> si
Rule 24    instruccion -> para
Rule 25    instruccion -> lectura
Rule 26    instruccion -> escritura
Rule 27    numero -> NUMEROENTERO
Rule 28    numero -> NUMEROREAL
Rule 29    declaracion -> tipo defineTipo : ID listaVar
Rule 30    declaracion -> tipo defineTipo : ID = operacion listaVar
Rule 31    defineTipo -> <empty>
Rule 32    listaVar -> , ID listaVar
Rule 33    listaVar -> <empty>
Rule 34    listaVar -> , ID = operacion listaVar
Rule 35    tipo -> ENTERO
Rule 36    tipo -> CARACTER
Rule 37    tipo -> REAL
Rule 38    tipo -> CADENA
Rule 39    tipo -> BOOLEANO
Rule 40    operacionLogica -> operacion
Rule 41    operacionLogica -> operacionLogica OPOR operacion
Rule 42    operacionLogica -> operacionLogica OPAND operacion
Rule 43    operacionLogica -> operacionLogica OPXOR operacion
Rule 44    operacionLogica -> OPNOT operacion
Rule 45    operacionLogica -> ( operacionLogica )
Rule 46    comparacion -> operando
Rule 47    comparacion -> operando < operando
Rule 48    comparacion -> operando > operando
Rule 49    comparacion -> operando MAYORIGUAL operando
Rule 50    comparacion -> operando MENORIGUAL operando
Rule 51    comparacion -> operando IGUAL operando
Rule 52    comparacion -> operando DIFERENTE operando
Rule 53    comparacion -> ( comparacion )
Rule 54    operando -> operacion
Rule 55    operando -> ID
Rule 56    operando -> VERDADERO
Rule 57    operando -> FALSO
Rule 58    lectura -> LEER ( ID )
Rule 59    escritura -> ESCRIBIR ( CADENALITERAL )
Rule 60    escritura -> ESCRIBIR ( operacion )
Rule 61    si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
Rule 62    si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
Rule 63    si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
Rule 64    si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
Rule 65    sino -> <empty>
Rule 66    sino -> SINO instrucciones
Rule 67    mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
Rule 68    para -> PARA ID = numero HASTA numero inc instrucciones FINPARA
Rule 69    inc -> INC numero
Rule 70    inc -> <empty>

Terminals, with rules where they appear

(                    : 16 45 53 58 59 60 61 62 62 63 63 64 64 67
)                    : 16 45 53 58 59 60 61 62 62 63 63 64 64 67
*                    : 8
+                    : 6
,                    : 32 34
-                    : 7 17
/                    : 9
:                    : 29 30
<                    : 14 47
=                    : 4 30 34 68
>                    : 15 48
ALGORITMO            : 1
BOOLEANO             : 39
CADENA               : 38
CADENALITERAL        : 59
CARACTER             : 36
COMENTARIO           : 
DIFERENTE            : 13 52
ENTERO               : 35
ENTONCES             : 61 62 63 64
ESCRIBIR             : 59 60
FALSO                : 57
FIN                  : 1
FINMIENTRAS          : 67
FINPARA              : 68
FINSI                : 61 62 63 64
HACER                : 67
HASTA                : 68
ID                   : 1 4 18 29 30 32 34 55 58 68
IGUAL                : 12 51
INC                  : 69
INICIO               : 1
LEER                 : 58
MAYORIGUAL           : 10 49
MENORIGUAL           : 11 50
MIENTRAS             : 67
NUMEROENTERO         : 19 27
NUMEROREAL           : 28
OPAND                : 42 62
OPNOT                : 44
OPOR                 : 41 63
OPXOR                : 43 64
PARA                 : 68
PRINCIPAL            : 1
REAL                 : 37
SI                   : 61 62 63 64
SINO                 : 66
VERDADERO            : 56
error                : 

Nonterminals, with rules where they appear

A                    : 0
asignacion           : 21
comparacion          : 53
declaracion          : 20
defineTipo           : 29 30
escritura            : 26
inc                  : 68
instruccion          : 2
instrucciones        : 1 2 61 62 63 64 66 67 68
lectura              : 25
listaVar             : 29 30 32 34
mientras             : 22
numero               : 68 68 69
operacion            : 4 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 17 30 34 40 41 42 43 44 54 60
operacionLogica      : 41 42 43 45 61 62 62 63 63 64 64 67
operando             : 46 47 47 48 48 49 49 50 50 51 51 52 52
para                 : 24
si                   : 23
sino                 : 61 62 63 64
tipo                 : 29 30

Parsing method: LALR

state 0

    (0) S' -> . A
    (1) A -> . ALGORITMO ID PRINCIPAL INICIO instrucciones FIN

    ALGORITMO       shift and go to state 2

    A                              shift and go to state 1

state 1

    (0) S' -> A .



state 2

    (1) A -> ALGORITMO . ID PRINCIPAL INICIO instrucciones FIN

    ID              shift and go to state 3


state 3

    (1) A -> ALGORITMO ID . PRINCIPAL INICIO instrucciones FIN

    PRINCIPAL       shift and go to state 4


state 4

    (1) A -> ALGORITMO ID PRINCIPAL . INICIO instrucciones FIN

    INICIO          shift and go to state 5


state 5

    (1) A -> ALGORITMO ID PRINCIPAL INICIO . instrucciones FIN
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    FIN             reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 7
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 6

    (4) asignacion -> ID . = operacion

    =               shift and go to state 27


state 7

    (1) A -> ALGORITMO ID PRINCIPAL INICIO instrucciones . FIN

    FIN             shift and go to state 28


state 8

    (2) instrucciones -> instruccion . instrucciones
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    FIN             reduce using rule 3 (instrucciones -> .)
    FINMIENTRAS     reduce using rule 3 (instrucciones -> .)
    SINO            reduce using rule 3 (instrucciones -> .)
    FINSI           reduce using rule 3 (instrucciones -> .)
    FINPARA         reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instruccion                    shift and go to state 8
    instrucciones                  shift and go to state 29
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 9

    (20) instruccion -> declaracion .

    ID              reduce using rule 20 (instruccion -> declaracion .)
    MIENTRAS        reduce using rule 20 (instruccion -> declaracion .)
    SI              reduce using rule 20 (instruccion -> declaracion .)
    PARA            reduce using rule 20 (instruccion -> declaracion .)
    LEER            reduce using rule 20 (instruccion -> declaracion .)
    ESCRIBIR        reduce using rule 20 (instruccion -> declaracion .)
    ENTERO          reduce using rule 20 (instruccion -> declaracion .)
    CARACTER        reduce using rule 20 (instruccion -> declaracion .)
    REAL            reduce using rule 20 (instruccion -> declaracion .)
    CADENA          reduce using rule 20 (instruccion -> declaracion .)
    BOOLEANO        reduce using rule 20 (instruccion -> declaracion .)
    FIN             reduce using rule 20 (instruccion -> declaracion .)
    FINMIENTRAS     reduce using rule 20 (instruccion -> declaracion .)
    SINO            reduce using rule 20 (instruccion -> declaracion .)
    FINSI           reduce using rule 20 (instruccion -> declaracion .)
    FINPARA         reduce using rule 20 (instruccion -> declaracion .)


state 10

    (21) instruccion -> asignacion .

    ID              reduce using rule 21 (instruccion -> asignacion .)
    MIENTRAS        reduce using rule 21 (instruccion -> asignacion .)
    SI              reduce using rule 21 (instruccion -> asignacion .)
    PARA            reduce using rule 21 (instruccion -> asignacion .)
    LEER            reduce using rule 21 (instruccion -> asignacion .)
    ESCRIBIR        reduce using rule 21 (instruccion -> asignacion .)
    ENTERO          reduce using rule 21 (instruccion -> asignacion .)
    CARACTER        reduce using rule 21 (instruccion -> asignacion .)
    REAL            reduce using rule 21 (instruccion -> asignacion .)
    CADENA          reduce using rule 21 (instruccion -> asignacion .)
    BOOLEANO        reduce using rule 21 (instruccion -> asignacion .)
    FIN             reduce using rule 21 (instruccion -> asignacion .)
    FINMIENTRAS     reduce using rule 21 (instruccion -> asignacion .)
    SINO            reduce using rule 21 (instruccion -> asignacion .)
    FINSI           reduce using rule 21 (instruccion -> asignacion .)
    FINPARA         reduce using rule 21 (instruccion -> asignacion .)


state 11

    (22) instruccion -> mientras .

    ID              reduce using rule 22 (instruccion -> mientras .)
    MIENTRAS        reduce using rule 22 (instruccion -> mientras .)
    SI              reduce using rule 22 (instruccion -> mientras .)
    PARA            reduce using rule 22 (instruccion -> mientras .)
    LEER            reduce using rule 22 (instruccion -> mientras .)
    ESCRIBIR        reduce using rule 22 (instruccion -> mientras .)
    ENTERO          reduce using rule 22 (instruccion -> mientras .)
    CARACTER        reduce using rule 22 (instruccion -> mientras .)
    REAL            reduce using rule 22 (instruccion -> mientras .)
    CADENA          reduce using rule 22 (instruccion -> mientras .)
    BOOLEANO        reduce using rule 22 (instruccion -> mientras .)
    FIN             reduce using rule 22 (instruccion -> mientras .)
    FINMIENTRAS     reduce using rule 22 (instruccion -> mientras .)
    SINO            reduce using rule 22 (instruccion -> mientras .)
    FINSI           reduce using rule 22 (instruccion -> mientras .)
    FINPARA         reduce using rule 22 (instruccion -> mientras .)


state 12

    (23) instruccion -> si .

    ID              reduce using rule 23 (instruccion -> si .)
    MIENTRAS        reduce using rule 23 (instruccion -> si .)
    SI              reduce using rule 23 (instruccion -> si .)
    PARA            reduce using rule 23 (instruccion -> si .)
    LEER            reduce using rule 23 (instruccion -> si .)
    ESCRIBIR        reduce using rule 23 (instruccion -> si .)
    ENTERO          reduce using rule 23 (instruccion -> si .)
    CARACTER        reduce using rule 23 (instruccion -> si .)
    REAL            reduce using rule 23 (instruccion -> si .)
    CADENA          reduce using rule 23 (instruccion -> si .)
    BOOLEANO        reduce using rule 23 (instruccion -> si .)
    FIN             reduce using rule 23 (instruccion -> si .)
    FINMIENTRAS     reduce using rule 23 (instruccion -> si .)
    SINO            reduce using rule 23 (instruccion -> si .)
    FINSI           reduce using rule 23 (instruccion -> si .)
    FINPARA         reduce using rule 23 (instruccion -> si .)


state 13

    (24) instruccion -> para .

    ID              reduce using rule 24 (instruccion -> para .)
    MIENTRAS        reduce using rule 24 (instruccion -> para .)
    SI              reduce using rule 24 (instruccion -> para .)
    PARA            reduce using rule 24 (instruccion -> para .)
    LEER            reduce using rule 24 (instruccion -> para .)
    ESCRIBIR        reduce using rule 24 (instruccion -> para .)
    ENTERO          reduce using rule 24 (instruccion -> para .)
    CARACTER        reduce using rule 24 (instruccion -> para .)
    REAL            reduce using rule 24 (instruccion -> para .)
    CADENA          reduce using rule 24 (instruccion -> para .)
    BOOLEANO        reduce using rule 24 (instruccion -> para .)
    FIN             reduce using rule 24 (instruccion -> para .)
    FINMIENTRAS     reduce using rule 24 (instruccion -> para .)
    SINO            reduce using rule 24 (instruccion -> para .)
    FINSI           reduce using rule 24 (instruccion -> para .)
    FINPARA         reduce using rule 24 (instruccion -> para .)


state 14

    (25) instruccion -> lectura .

    ID              reduce using rule 25 (instruccion -> lectura .)
    MIENTRAS        reduce using rule 25 (instruccion -> lectura .)
    SI              reduce using rule 25 (instruccion -> lectura .)
    PARA            reduce using rule 25 (instruccion -> lectura .)
    LEER            reduce using rule 25 (instruccion -> lectura .)
    ESCRIBIR        reduce using rule 25 (instruccion -> lectura .)
    ENTERO          reduce using rule 25 (instruccion -> lectura .)
    CARACTER        reduce using rule 25 (instruccion -> lectura .)
    REAL            reduce using rule 25 (instruccion -> lectura .)
    CADENA          reduce using rule 25 (instruccion -> lectura .)
    BOOLEANO        reduce using rule 25 (instruccion -> lectura .)
    FIN             reduce using rule 25 (instruccion -> lectura .)
    FINMIENTRAS     reduce using rule 25 (instruccion -> lectura .)
    SINO            reduce using rule 25 (instruccion -> lectura .)
    FINSI           reduce using rule 25 (instruccion -> lectura .)
    FINPARA         reduce using rule 25 (instruccion -> lectura .)


state 15

    (26) instruccion -> escritura .

    ID              reduce using rule 26 (instruccion -> escritura .)
    MIENTRAS        reduce using rule 26 (instruccion -> escritura .)
    SI              reduce using rule 26 (instruccion -> escritura .)
    PARA            reduce using rule 26 (instruccion -> escritura .)
    LEER            reduce using rule 26 (instruccion -> escritura .)
    ESCRIBIR        reduce using rule 26 (instruccion -> escritura .)
    ENTERO          reduce using rule 26 (instruccion -> escritura .)
    CARACTER        reduce using rule 26 (instruccion -> escritura .)
    REAL            reduce using rule 26 (instruccion -> escritura .)
    CADENA          reduce using rule 26 (instruccion -> escritura .)
    BOOLEANO        reduce using rule 26 (instruccion -> escritura .)
    FIN             reduce using rule 26 (instruccion -> escritura .)
    FINMIENTRAS     reduce using rule 26 (instruccion -> escritura .)
    SINO            reduce using rule 26 (instruccion -> escritura .)
    FINSI           reduce using rule 26 (instruccion -> escritura .)
    FINPARA         reduce using rule 26 (instruccion -> escritura .)


state 16

    (29) declaracion -> tipo . defineTipo : ID listaVar
    (30) declaracion -> tipo . defineTipo : ID = operacion listaVar
    (31) defineTipo -> .

    :               reduce using rule 31 (defineTipo -> .)

    defineTipo                     shift and go to state 30

state 17

    (67) mientras -> MIENTRAS . ( operacionLogica ) HACER instrucciones FINMIENTRAS

    (               shift and go to state 31


state 18

    (61) si -> SI . ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> SI . ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> SI . ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> SI . ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI

    (               shift and go to state 32


state 19

    (68) para -> PARA . ID = numero HASTA numero inc instrucciones FINPARA

    ID              shift and go to state 33


state 20

    (58) lectura -> LEER . ( ID )

    (               shift and go to state 34


state 21

    (59) escritura -> ESCRIBIR . ( CADENALITERAL )
    (60) escritura -> ESCRIBIR . ( operacion )

    (               shift and go to state 35


state 22

    (35) tipo -> ENTERO .

    :               reduce using rule 35 (tipo -> ENTERO .)


state 23

    (36) tipo -> CARACTER .

    :               reduce using rule 36 (tipo -> CARACTER .)


state 24

    (37) tipo -> REAL .

    :               reduce using rule 37 (tipo -> REAL .)


state 25

    (38) tipo -> CADENA .

    :               reduce using rule 38 (tipo -> CADENA .)


state 26

    (39) tipo -> BOOLEANO .

    :               reduce using rule 39 (tipo -> BOOLEANO .)


state 27

    (4) asignacion -> ID = . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 37

state 28

    (1) A -> ALGORITMO ID PRINCIPAL INICIO instrucciones FIN .

    $end            reduce using rule 1 (A -> ALGORITMO ID PRINCIPAL INICIO instrucciones FIN .)


state 29

    (2) instrucciones -> instruccion instrucciones .

    FIN             reduce using rule 2 (instrucciones -> instruccion instrucciones .)
    FINMIENTRAS     reduce using rule 2 (instrucciones -> instruccion instrucciones .)
    SINO            reduce using rule 2 (instrucciones -> instruccion instrucciones .)
    FINSI           reduce using rule 2 (instrucciones -> instruccion instrucciones .)
    FINPARA         reduce using rule 2 (instrucciones -> instruccion instrucciones .)


state 30

    (29) declaracion -> tipo defineTipo . : ID listaVar
    (30) declaracion -> tipo defineTipo . : ID = operacion listaVar

    :               shift and go to state 41


state 31

    (67) mientras -> MIENTRAS ( . operacionLogica ) HACER instrucciones FINMIENTRAS
    (40) operacionLogica -> . operacion
    (41) operacionLogica -> . operacionLogica OPOR operacion
    (42) operacionLogica -> . operacionLogica OPAND operacion
    (43) operacionLogica -> . operacionLogica OPXOR operacion
    (44) operacionLogica -> . OPNOT operacion
    (45) operacionLogica -> . ( operacionLogica )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    OPNOT           shift and go to state 45
    (               shift and go to state 42
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacionLogica                shift and go to state 43
    operacion                      shift and go to state 44

state 32

    (61) si -> SI ( . operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> SI ( . operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> SI ( . operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> SI ( . operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (40) operacionLogica -> . operacion
    (41) operacionLogica -> . operacionLogica OPOR operacion
    (42) operacionLogica -> . operacionLogica OPAND operacion
    (43) operacionLogica -> . operacionLogica OPXOR operacion
    (44) operacionLogica -> . OPNOT operacion
    (45) operacionLogica -> . ( operacionLogica )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    OPNOT           shift and go to state 45
    (               shift and go to state 42
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacionLogica                shift and go to state 46
    operacion                      shift and go to state 44

state 33

    (68) para -> PARA ID . = numero HASTA numero inc instrucciones FINPARA

    =               shift and go to state 47


state 34

    (58) lectura -> LEER ( . ID )

    ID              shift and go to state 48


state 35

    (59) escritura -> ESCRIBIR ( . CADENALITERAL )
    (60) escritura -> ESCRIBIR ( . operacion )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    CADENALITERAL   shift and go to state 49
    )               reduce using rule 5 (operacion -> .)
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 50

state 36

    (18) operacion -> ID .

    +               reduce using rule 18 (operacion -> ID .)
    -               reduce using rule 18 (operacion -> ID .)
    *               reduce using rule 18 (operacion -> ID .)
    /               reduce using rule 18 (operacion -> ID .)
    MAYORIGUAL      reduce using rule 18 (operacion -> ID .)
    MENORIGUAL      reduce using rule 18 (operacion -> ID .)
    IGUAL           reduce using rule 18 (operacion -> ID .)
    DIFERENTE       reduce using rule 18 (operacion -> ID .)
    <               reduce using rule 18 (operacion -> ID .)
    >               reduce using rule 18 (operacion -> ID .)
    ID              reduce using rule 18 (operacion -> ID .)
    MIENTRAS        reduce using rule 18 (operacion -> ID .)
    SI              reduce using rule 18 (operacion -> ID .)
    PARA            reduce using rule 18 (operacion -> ID .)
    LEER            reduce using rule 18 (operacion -> ID .)
    ESCRIBIR        reduce using rule 18 (operacion -> ID .)
    ENTERO          reduce using rule 18 (operacion -> ID .)
    CARACTER        reduce using rule 18 (operacion -> ID .)
    REAL            reduce using rule 18 (operacion -> ID .)
    CADENA          reduce using rule 18 (operacion -> ID .)
    BOOLEANO        reduce using rule 18 (operacion -> ID .)
    FIN             reduce using rule 18 (operacion -> ID .)
    FINMIENTRAS     reduce using rule 18 (operacion -> ID .)
    SINO            reduce using rule 18 (operacion -> ID .)
    FINSI           reduce using rule 18 (operacion -> ID .)
    FINPARA         reduce using rule 18 (operacion -> ID .)
    )               reduce using rule 18 (operacion -> ID .)
    OPOR            reduce using rule 18 (operacion -> ID .)
    OPAND           reduce using rule 18 (operacion -> ID .)
    OPXOR           reduce using rule 18 (operacion -> ID .)
    ,               reduce using rule 18 (operacion -> ID .)


state 37

    (4) asignacion -> ID = operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    ID              reduce using rule 4 (asignacion -> ID = operacion .)
    MIENTRAS        reduce using rule 4 (asignacion -> ID = operacion .)
    SI              reduce using rule 4 (asignacion -> ID = operacion .)
    PARA            reduce using rule 4 (asignacion -> ID = operacion .)
    LEER            reduce using rule 4 (asignacion -> ID = operacion .)
    ESCRIBIR        reduce using rule 4 (asignacion -> ID = operacion .)
    ENTERO          reduce using rule 4 (asignacion -> ID = operacion .)
    CARACTER        reduce using rule 4 (asignacion -> ID = operacion .)
    REAL            reduce using rule 4 (asignacion -> ID = operacion .)
    CADENA          reduce using rule 4 (asignacion -> ID = operacion .)
    BOOLEANO        reduce using rule 4 (asignacion -> ID = operacion .)
    FIN             reduce using rule 4 (asignacion -> ID = operacion .)
    FINMIENTRAS     reduce using rule 4 (asignacion -> ID = operacion .)
    SINO            reduce using rule 4 (asignacion -> ID = operacion .)
    FINSI           reduce using rule 4 (asignacion -> ID = operacion .)
    FINPARA         reduce using rule 4 (asignacion -> ID = operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 38

    (17) operacion -> - . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 61

state 39

    (16) operacion -> ( . operacion )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    )               reduce using rule 5 (operacion -> .)
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 62

state 40

    (19) operacion -> NUMEROENTERO .

    +               reduce using rule 19 (operacion -> NUMEROENTERO .)
    -               reduce using rule 19 (operacion -> NUMEROENTERO .)
    *               reduce using rule 19 (operacion -> NUMEROENTERO .)
    /               reduce using rule 19 (operacion -> NUMEROENTERO .)
    MAYORIGUAL      reduce using rule 19 (operacion -> NUMEROENTERO .)
    MENORIGUAL      reduce using rule 19 (operacion -> NUMEROENTERO .)
    IGUAL           reduce using rule 19 (operacion -> NUMEROENTERO .)
    DIFERENTE       reduce using rule 19 (operacion -> NUMEROENTERO .)
    <               reduce using rule 19 (operacion -> NUMEROENTERO .)
    >               reduce using rule 19 (operacion -> NUMEROENTERO .)
    ID              reduce using rule 19 (operacion -> NUMEROENTERO .)
    MIENTRAS        reduce using rule 19 (operacion -> NUMEROENTERO .)
    SI              reduce using rule 19 (operacion -> NUMEROENTERO .)
    PARA            reduce using rule 19 (operacion -> NUMEROENTERO .)
    LEER            reduce using rule 19 (operacion -> NUMEROENTERO .)
    ESCRIBIR        reduce using rule 19 (operacion -> NUMEROENTERO .)
    ENTERO          reduce using rule 19 (operacion -> NUMEROENTERO .)
    CARACTER        reduce using rule 19 (operacion -> NUMEROENTERO .)
    REAL            reduce using rule 19 (operacion -> NUMEROENTERO .)
    CADENA          reduce using rule 19 (operacion -> NUMEROENTERO .)
    BOOLEANO        reduce using rule 19 (operacion -> NUMEROENTERO .)
    FIN             reduce using rule 19 (operacion -> NUMEROENTERO .)
    FINMIENTRAS     reduce using rule 19 (operacion -> NUMEROENTERO .)
    SINO            reduce using rule 19 (operacion -> NUMEROENTERO .)
    FINSI           reduce using rule 19 (operacion -> NUMEROENTERO .)
    FINPARA         reduce using rule 19 (operacion -> NUMEROENTERO .)
    )               reduce using rule 19 (operacion -> NUMEROENTERO .)
    OPOR            reduce using rule 19 (operacion -> NUMEROENTERO .)
    OPAND           reduce using rule 19 (operacion -> NUMEROENTERO .)
    OPXOR           reduce using rule 19 (operacion -> NUMEROENTERO .)
    ,               reduce using rule 19 (operacion -> NUMEROENTERO .)


state 41

    (29) declaracion -> tipo defineTipo : . ID listaVar
    (30) declaracion -> tipo defineTipo : . ID = operacion listaVar

    ID              shift and go to state 63


state 42

    (45) operacionLogica -> ( . operacionLogica )
    (16) operacion -> ( . operacion )
    (40) operacionLogica -> . operacion
    (41) operacionLogica -> . operacionLogica OPOR operacion
    (42) operacionLogica -> . operacionLogica OPAND operacion
    (43) operacionLogica -> . operacionLogica OPXOR operacion
    (44) operacionLogica -> . OPNOT operacion
    (45) operacionLogica -> . ( operacionLogica )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    OPNOT           shift and go to state 45
    (               shift and go to state 42
    )               reduce using rule 5 (operacion -> .)
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacionLogica                shift and go to state 64
    operacion                      shift and go to state 65

state 43

    (67) mientras -> MIENTRAS ( operacionLogica . ) HACER instrucciones FINMIENTRAS
    (41) operacionLogica -> operacionLogica . OPOR operacion
    (42) operacionLogica -> operacionLogica . OPAND operacion
    (43) operacionLogica -> operacionLogica . OPXOR operacion

    )               shift and go to state 66
    OPOR            shift and go to state 67
    OPAND           shift and go to state 68
    OPXOR           shift and go to state 69


state 44

    (40) operacionLogica -> operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    )               reduce using rule 40 (operacionLogica -> operacion .)
    OPOR            reduce using rule 40 (operacionLogica -> operacion .)
    OPAND           reduce using rule 40 (operacionLogica -> operacion .)
    OPXOR           reduce using rule 40 (operacionLogica -> operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 45

    (44) operacionLogica -> OPNOT . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 70

state 46

    (61) si -> SI ( operacionLogica . ) ENTONCES instrucciones sino FINSI
    (62) si -> SI ( operacionLogica . ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> SI ( operacionLogica . ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> SI ( operacionLogica . ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (41) operacionLogica -> operacionLogica . OPOR operacion
    (42) operacionLogica -> operacionLogica . OPAND operacion
    (43) operacionLogica -> operacionLogica . OPXOR operacion

    )               shift and go to state 71
    OPOR            shift and go to state 67
    OPAND           shift and go to state 68
    OPXOR           shift and go to state 69


state 47

    (68) para -> PARA ID = . numero HASTA numero inc instrucciones FINPARA
    (27) numero -> . NUMEROENTERO
    (28) numero -> . NUMEROREAL

    NUMEROENTERO    shift and go to state 73
    NUMEROREAL      shift and go to state 74

    numero                         shift and go to state 72

state 48

    (58) lectura -> LEER ( ID . )

    )               shift and go to state 75


state 49

    (59) escritura -> ESCRIBIR ( CADENALITERAL . )

    )               shift and go to state 76


state 50

    (60) escritura -> ESCRIBIR ( operacion . )
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    )               shift and go to state 77
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 51

    (6) operacion -> operacion + . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 78

state 52

    (7) operacion -> operacion - . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 79

state 53

    (8) operacion -> operacion * . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 80

state 54

    (9) operacion -> operacion / . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 81

state 55

    (10) operacion -> operacion MAYORIGUAL . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 82

state 56

    (11) operacion -> operacion MENORIGUAL . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 83

state 57

    (12) operacion -> operacion IGUAL . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 84

state 58

    (13) operacion -> operacion DIFERENTE . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 85

state 59

    (14) operacion -> operacion < . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 86

state 60

    (15) operacion -> operacion > . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 87

state 61

    (17) operacion -> - operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    +               reduce using rule 17 (operacion -> - operacion .)
    -               reduce using rule 17 (operacion -> - operacion .)
    *               reduce using rule 17 (operacion -> - operacion .)
    /               reduce using rule 17 (operacion -> - operacion .)
    MAYORIGUAL      reduce using rule 17 (operacion -> - operacion .)
    MENORIGUAL      reduce using rule 17 (operacion -> - operacion .)
    IGUAL           reduce using rule 17 (operacion -> - operacion .)
    DIFERENTE       reduce using rule 17 (operacion -> - operacion .)
    <               reduce using rule 17 (operacion -> - operacion .)
    >               reduce using rule 17 (operacion -> - operacion .)
    ID              reduce using rule 17 (operacion -> - operacion .)
    MIENTRAS        reduce using rule 17 (operacion -> - operacion .)
    SI              reduce using rule 17 (operacion -> - operacion .)
    PARA            reduce using rule 17 (operacion -> - operacion .)
    LEER            reduce using rule 17 (operacion -> - operacion .)
    ESCRIBIR        reduce using rule 17 (operacion -> - operacion .)
    ENTERO          reduce using rule 17 (operacion -> - operacion .)
    CARACTER        reduce using rule 17 (operacion -> - operacion .)
    REAL            reduce using rule 17 (operacion -> - operacion .)
    CADENA          reduce using rule 17 (operacion -> - operacion .)
    BOOLEANO        reduce using rule 17 (operacion -> - operacion .)
    FIN             reduce using rule 17 (operacion -> - operacion .)
    FINMIENTRAS     reduce using rule 17 (operacion -> - operacion .)
    SINO            reduce using rule 17 (operacion -> - operacion .)
    FINSI           reduce using rule 17 (operacion -> - operacion .)
    FINPARA         reduce using rule 17 (operacion -> - operacion .)
    )               reduce using rule 17 (operacion -> - operacion .)
    OPOR            reduce using rule 17 (operacion -> - operacion .)
    OPAND           reduce using rule 17 (operacion -> - operacion .)
    OPXOR           reduce using rule 17 (operacion -> - operacion .)
    ,               reduce using rule 17 (operacion -> - operacion .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 62

    (16) operacion -> ( operacion . )
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    )               shift and go to state 88
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 63

    (29) declaracion -> tipo defineTipo : ID . listaVar
    (30) declaracion -> tipo defineTipo : ID . = operacion listaVar
    (32) listaVar -> . , ID listaVar
    (33) listaVar -> .
    (34) listaVar -> . , ID = operacion listaVar

    =               shift and go to state 90
    ,               shift and go to state 91
    ID              reduce using rule 33 (listaVar -> .)
    MIENTRAS        reduce using rule 33 (listaVar -> .)
    SI              reduce using rule 33 (listaVar -> .)
    PARA            reduce using rule 33 (listaVar -> .)
    LEER            reduce using rule 33 (listaVar -> .)
    ESCRIBIR        reduce using rule 33 (listaVar -> .)
    ENTERO          reduce using rule 33 (listaVar -> .)
    CARACTER        reduce using rule 33 (listaVar -> .)
    REAL            reduce using rule 33 (listaVar -> .)
    CADENA          reduce using rule 33 (listaVar -> .)
    BOOLEANO        reduce using rule 33 (listaVar -> .)
    FIN             reduce using rule 33 (listaVar -> .)
    FINMIENTRAS     reduce using rule 33 (listaVar -> .)
    SINO            reduce using rule 33 (listaVar -> .)
    FINSI           reduce using rule 33 (listaVar -> .)
    FINPARA         reduce using rule 33 (listaVar -> .)

    listaVar                       shift and go to state 89

state 64

    (45) operacionLogica -> ( operacionLogica . )
    (41) operacionLogica -> operacionLogica . OPOR operacion
    (42) operacionLogica -> operacionLogica . OPAND operacion
    (43) operacionLogica -> operacionLogica . OPXOR operacion

    )               shift and go to state 92
    OPOR            shift and go to state 67
    OPAND           shift and go to state 68
    OPXOR           shift and go to state 69


state 65

    (16) operacion -> ( operacion . )
    (40) operacionLogica -> operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 88
    OPOR            reduce using rule 40 (operacionLogica -> operacion .)
    OPAND           reduce using rule 40 (operacionLogica -> operacion .)
    OPXOR           reduce using rule 40 (operacionLogica -> operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60

  ! )               [ reduce using rule 40 (operacionLogica -> operacion .) ]


state 66

    (67) mientras -> MIENTRAS ( operacionLogica ) . HACER instrucciones FINMIENTRAS

    HACER           shift and go to state 93


state 67

    (41) operacionLogica -> operacionLogica OPOR . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 94

state 68

    (42) operacionLogica -> operacionLogica OPAND . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 95

state 69

    (43) operacionLogica -> operacionLogica OPXOR . operacion
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 96

state 70

    (44) operacionLogica -> OPNOT operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    )               reduce using rule 44 (operacionLogica -> OPNOT operacion .)
    OPOR            reduce using rule 44 (operacionLogica -> OPNOT operacion .)
    OPAND           reduce using rule 44 (operacionLogica -> OPNOT operacion .)
    OPXOR           reduce using rule 44 (operacionLogica -> OPNOT operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 71

    (61) si -> SI ( operacionLogica ) . ENTONCES instrucciones sino FINSI
    (62) si -> SI ( operacionLogica ) . OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> SI ( operacionLogica ) . OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> SI ( operacionLogica ) . OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI

    ENTONCES        shift and go to state 97
    OPAND           shift and go to state 98
    OPOR            shift and go to state 99
    OPXOR           shift and go to state 100


state 72

    (68) para -> PARA ID = numero . HASTA numero inc instrucciones FINPARA

    HASTA           shift and go to state 101


state 73

    (27) numero -> NUMEROENTERO .

    HASTA           reduce using rule 27 (numero -> NUMEROENTERO .)
    INC             reduce using rule 27 (numero -> NUMEROENTERO .)
    ID              reduce using rule 27 (numero -> NUMEROENTERO .)
    MIENTRAS        reduce using rule 27 (numero -> NUMEROENTERO .)
    SI              reduce using rule 27 (numero -> NUMEROENTERO .)
    PARA            reduce using rule 27 (numero -> NUMEROENTERO .)
    LEER            reduce using rule 27 (numero -> NUMEROENTERO .)
    ESCRIBIR        reduce using rule 27 (numero -> NUMEROENTERO .)
    ENTERO          reduce using rule 27 (numero -> NUMEROENTERO .)
    CARACTER        reduce using rule 27 (numero -> NUMEROENTERO .)
    REAL            reduce using rule 27 (numero -> NUMEROENTERO .)
    CADENA          reduce using rule 27 (numero -> NUMEROENTERO .)
    BOOLEANO        reduce using rule 27 (numero -> NUMEROENTERO .)
    FINPARA         reduce using rule 27 (numero -> NUMEROENTERO .)


state 74

    (28) numero -> NUMEROREAL .

    HASTA           reduce using rule 28 (numero -> NUMEROREAL .)
    INC             reduce using rule 28 (numero -> NUMEROREAL .)
    ID              reduce using rule 28 (numero -> NUMEROREAL .)
    MIENTRAS        reduce using rule 28 (numero -> NUMEROREAL .)
    SI              reduce using rule 28 (numero -> NUMEROREAL .)
    PARA            reduce using rule 28 (numero -> NUMEROREAL .)
    LEER            reduce using rule 28 (numero -> NUMEROREAL .)
    ESCRIBIR        reduce using rule 28 (numero -> NUMEROREAL .)
    ENTERO          reduce using rule 28 (numero -> NUMEROREAL .)
    CARACTER        reduce using rule 28 (numero -> NUMEROREAL .)
    REAL            reduce using rule 28 (numero -> NUMEROREAL .)
    CADENA          reduce using rule 28 (numero -> NUMEROREAL .)
    BOOLEANO        reduce using rule 28 (numero -> NUMEROREAL .)
    FINPARA         reduce using rule 28 (numero -> NUMEROREAL .)


state 75

    (58) lectura -> LEER ( ID ) .

    ID              reduce using rule 58 (lectura -> LEER ( ID ) .)
    MIENTRAS        reduce using rule 58 (lectura -> LEER ( ID ) .)
    SI              reduce using rule 58 (lectura -> LEER ( ID ) .)
    PARA            reduce using rule 58 (lectura -> LEER ( ID ) .)
    LEER            reduce using rule 58 (lectura -> LEER ( ID ) .)
    ESCRIBIR        reduce using rule 58 (lectura -> LEER ( ID ) .)
    ENTERO          reduce using rule 58 (lectura -> LEER ( ID ) .)
    CARACTER        reduce using rule 58 (lectura -> LEER ( ID ) .)
    REAL            reduce using rule 58 (lectura -> LEER ( ID ) .)
    CADENA          reduce using rule 58 (lectura -> LEER ( ID ) .)
    BOOLEANO        reduce using rule 58 (lectura -> LEER ( ID ) .)
    FIN             reduce using rule 58 (lectura -> LEER ( ID ) .)
    FINMIENTRAS     reduce using rule 58 (lectura -> LEER ( ID ) .)
    SINO            reduce using rule 58 (lectura -> LEER ( ID ) .)
    FINSI           reduce using rule 58 (lectura -> LEER ( ID ) .)
    FINPARA         reduce using rule 58 (lectura -> LEER ( ID ) .)


state 76

    (59) escritura -> ESCRIBIR ( CADENALITERAL ) .

    ID              reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    MIENTRAS        reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    SI              reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    PARA            reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    LEER            reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    ESCRIBIR        reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    ENTERO          reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    CARACTER        reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    REAL            reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    CADENA          reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    BOOLEANO        reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    FIN             reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    FINMIENTRAS     reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    SINO            reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    FINSI           reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)
    FINPARA         reduce using rule 59 (escritura -> ESCRIBIR ( CADENALITERAL ) .)


state 77

    (60) escritura -> ESCRIBIR ( operacion ) .

    ID              reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    MIENTRAS        reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    SI              reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    PARA            reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    LEER            reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    ESCRIBIR        reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    ENTERO          reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    CARACTER        reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    REAL            reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    CADENA          reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    BOOLEANO        reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    FIN             reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    FINMIENTRAS     reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    SINO            reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    FINSI           reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)
    FINPARA         reduce using rule 60 (escritura -> ESCRIBIR ( operacion ) .)


state 78

    (6) operacion -> operacion + operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    +               reduce using rule 6 (operacion -> operacion + operacion .)
    -               reduce using rule 6 (operacion -> operacion + operacion .)
    MAYORIGUAL      reduce using rule 6 (operacion -> operacion + operacion .)
    MENORIGUAL      reduce using rule 6 (operacion -> operacion + operacion .)
    IGUAL           reduce using rule 6 (operacion -> operacion + operacion .)
    DIFERENTE       reduce using rule 6 (operacion -> operacion + operacion .)
    <               reduce using rule 6 (operacion -> operacion + operacion .)
    >               reduce using rule 6 (operacion -> operacion + operacion .)
    ID              reduce using rule 6 (operacion -> operacion + operacion .)
    MIENTRAS        reduce using rule 6 (operacion -> operacion + operacion .)
    SI              reduce using rule 6 (operacion -> operacion + operacion .)
    PARA            reduce using rule 6 (operacion -> operacion + operacion .)
    LEER            reduce using rule 6 (operacion -> operacion + operacion .)
    ESCRIBIR        reduce using rule 6 (operacion -> operacion + operacion .)
    ENTERO          reduce using rule 6 (operacion -> operacion + operacion .)
    CARACTER        reduce using rule 6 (operacion -> operacion + operacion .)
    REAL            reduce using rule 6 (operacion -> operacion + operacion .)
    CADENA          reduce using rule 6 (operacion -> operacion + operacion .)
    BOOLEANO        reduce using rule 6 (operacion -> operacion + operacion .)
    FIN             reduce using rule 6 (operacion -> operacion + operacion .)
    FINMIENTRAS     reduce using rule 6 (operacion -> operacion + operacion .)
    SINO            reduce using rule 6 (operacion -> operacion + operacion .)
    FINSI           reduce using rule 6 (operacion -> operacion + operacion .)
    FINPARA         reduce using rule 6 (operacion -> operacion + operacion .)
    )               reduce using rule 6 (operacion -> operacion + operacion .)
    OPOR            reduce using rule 6 (operacion -> operacion + operacion .)
    OPAND           reduce using rule 6 (operacion -> operacion + operacion .)
    OPXOR           reduce using rule 6 (operacion -> operacion + operacion .)
    ,               reduce using rule 6 (operacion -> operacion + operacion .)
    *               shift and go to state 53
    /               shift and go to state 54

  ! *               [ reduce using rule 6 (operacion -> operacion + operacion .) ]
  ! /               [ reduce using rule 6 (operacion -> operacion + operacion .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 79

    (7) operacion -> operacion - operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    +               reduce using rule 7 (operacion -> operacion - operacion .)
    -               reduce using rule 7 (operacion -> operacion - operacion .)
    MAYORIGUAL      reduce using rule 7 (operacion -> operacion - operacion .)
    MENORIGUAL      reduce using rule 7 (operacion -> operacion - operacion .)
    IGUAL           reduce using rule 7 (operacion -> operacion - operacion .)
    DIFERENTE       reduce using rule 7 (operacion -> operacion - operacion .)
    <               reduce using rule 7 (operacion -> operacion - operacion .)
    >               reduce using rule 7 (operacion -> operacion - operacion .)
    ID              reduce using rule 7 (operacion -> operacion - operacion .)
    MIENTRAS        reduce using rule 7 (operacion -> operacion - operacion .)
    SI              reduce using rule 7 (operacion -> operacion - operacion .)
    PARA            reduce using rule 7 (operacion -> operacion - operacion .)
    LEER            reduce using rule 7 (operacion -> operacion - operacion .)
    ESCRIBIR        reduce using rule 7 (operacion -> operacion - operacion .)
    ENTERO          reduce using rule 7 (operacion -> operacion - operacion .)
    CARACTER        reduce using rule 7 (operacion -> operacion - operacion .)
    REAL            reduce using rule 7 (operacion -> operacion - operacion .)
    CADENA          reduce using rule 7 (operacion -> operacion - operacion .)
    BOOLEANO        reduce using rule 7 (operacion -> operacion - operacion .)
    FIN             reduce using rule 7 (operacion -> operacion - operacion .)
    FINMIENTRAS     reduce using rule 7 (operacion -> operacion - operacion .)
    SINO            reduce using rule 7 (operacion -> operacion - operacion .)
    FINSI           reduce using rule 7 (operacion -> operacion - operacion .)
    FINPARA         reduce using rule 7 (operacion -> operacion - operacion .)
    )               reduce using rule 7 (operacion -> operacion - operacion .)
    OPOR            reduce using rule 7 (operacion -> operacion - operacion .)
    OPAND           reduce using rule 7 (operacion -> operacion - operacion .)
    OPXOR           reduce using rule 7 (operacion -> operacion - operacion .)
    ,               reduce using rule 7 (operacion -> operacion - operacion .)
    *               shift and go to state 53
    /               shift and go to state 54

  ! *               [ reduce using rule 7 (operacion -> operacion - operacion .) ]
  ! /               [ reduce using rule 7 (operacion -> operacion - operacion .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 80

    (8) operacion -> operacion * operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    +               reduce using rule 8 (operacion -> operacion * operacion .)
    -               reduce using rule 8 (operacion -> operacion * operacion .)
    *               reduce using rule 8 (operacion -> operacion * operacion .)
    /               reduce using rule 8 (operacion -> operacion * operacion .)
    MAYORIGUAL      reduce using rule 8 (operacion -> operacion * operacion .)
    MENORIGUAL      reduce using rule 8 (operacion -> operacion * operacion .)
    IGUAL           reduce using rule 8 (operacion -> operacion * operacion .)
    DIFERENTE       reduce using rule 8 (operacion -> operacion * operacion .)
    <               reduce using rule 8 (operacion -> operacion * operacion .)
    >               reduce using rule 8 (operacion -> operacion * operacion .)
    ID              reduce using rule 8 (operacion -> operacion * operacion .)
    MIENTRAS        reduce using rule 8 (operacion -> operacion * operacion .)
    SI              reduce using rule 8 (operacion -> operacion * operacion .)
    PARA            reduce using rule 8 (operacion -> operacion * operacion .)
    LEER            reduce using rule 8 (operacion -> operacion * operacion .)
    ESCRIBIR        reduce using rule 8 (operacion -> operacion * operacion .)
    ENTERO          reduce using rule 8 (operacion -> operacion * operacion .)
    CARACTER        reduce using rule 8 (operacion -> operacion * operacion .)
    REAL            reduce using rule 8 (operacion -> operacion * operacion .)
    CADENA          reduce using rule 8 (operacion -> operacion * operacion .)
    BOOLEANO        reduce using rule 8 (operacion -> operacion * operacion .)
    FIN             reduce using rule 8 (operacion -> operacion * operacion .)
    FINMIENTRAS     reduce using rule 8 (operacion -> operacion * operacion .)
    SINO            reduce using rule 8 (operacion -> operacion * operacion .)
    FINSI           reduce using rule 8 (operacion -> operacion * operacion .)
    FINPARA         reduce using rule 8 (operacion -> operacion * operacion .)
    )               reduce using rule 8 (operacion -> operacion * operacion .)
    OPOR            reduce using rule 8 (operacion -> operacion * operacion .)
    OPAND           reduce using rule 8 (operacion -> operacion * operacion .)
    OPXOR           reduce using rule 8 (operacion -> operacion * operacion .)
    ,               reduce using rule 8 (operacion -> operacion * operacion .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 81

    (9) operacion -> operacion / operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    +               reduce using rule 9 (operacion -> operacion / operacion .)
    -               reduce using rule 9 (operacion -> operacion / operacion .)
    *               reduce using rule 9 (operacion -> operacion / operacion .)
    /               reduce using rule 9 (operacion -> operacion / operacion .)
    MAYORIGUAL      reduce using rule 9 (operacion -> operacion / operacion .)
    MENORIGUAL      reduce using rule 9 (operacion -> operacion / operacion .)
    IGUAL           reduce using rule 9 (operacion -> operacion / operacion .)
    DIFERENTE       reduce using rule 9 (operacion -> operacion / operacion .)
    <               reduce using rule 9 (operacion -> operacion / operacion .)
    >               reduce using rule 9 (operacion -> operacion / operacion .)
    ID              reduce using rule 9 (operacion -> operacion / operacion .)
    MIENTRAS        reduce using rule 9 (operacion -> operacion / operacion .)
    SI              reduce using rule 9 (operacion -> operacion / operacion .)
    PARA            reduce using rule 9 (operacion -> operacion / operacion .)
    LEER            reduce using rule 9 (operacion -> operacion / operacion .)
    ESCRIBIR        reduce using rule 9 (operacion -> operacion / operacion .)
    ENTERO          reduce using rule 9 (operacion -> operacion / operacion .)
    CARACTER        reduce using rule 9 (operacion -> operacion / operacion .)
    REAL            reduce using rule 9 (operacion -> operacion / operacion .)
    CADENA          reduce using rule 9 (operacion -> operacion / operacion .)
    BOOLEANO        reduce using rule 9 (operacion -> operacion / operacion .)
    FIN             reduce using rule 9 (operacion -> operacion / operacion .)
    FINMIENTRAS     reduce using rule 9 (operacion -> operacion / operacion .)
    SINO            reduce using rule 9 (operacion -> operacion / operacion .)
    FINSI           reduce using rule 9 (operacion -> operacion / operacion .)
    FINPARA         reduce using rule 9 (operacion -> operacion / operacion .)
    )               reduce using rule 9 (operacion -> operacion / operacion .)
    OPOR            reduce using rule 9 (operacion -> operacion / operacion .)
    OPAND           reduce using rule 9 (operacion -> operacion / operacion .)
    OPXOR           reduce using rule 9 (operacion -> operacion / operacion .)
    ,               reduce using rule 9 (operacion -> operacion / operacion .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 82

    (10) operacion -> operacion MAYORIGUAL operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    MAYORIGUAL      reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    MENORIGUAL      reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    IGUAL           reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    DIFERENTE       reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    <               reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    >               reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    ID              reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    MIENTRAS        reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    SI              reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    PARA            reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    LEER            reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    ESCRIBIR        reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    ENTERO          reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    CARACTER        reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    REAL            reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    CADENA          reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    BOOLEANO        reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    FIN             reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    FINMIENTRAS     reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    SINO            reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    FINSI           reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    FINPARA         reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    )               reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    OPOR            reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    OPAND           reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    OPXOR           reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    ,               reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54

  ! +               [ reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .) ]
  ! -               [ reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .) ]
  ! *               [ reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .) ]
  ! /               [ reduce using rule 10 (operacion -> operacion MAYORIGUAL operacion .) ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 83

    (11) operacion -> operacion MENORIGUAL operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    MAYORIGUAL      reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    MENORIGUAL      reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    IGUAL           reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    DIFERENTE       reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    <               reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    >               reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    ID              reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    MIENTRAS        reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    SI              reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    PARA            reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    LEER            reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    ESCRIBIR        reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    ENTERO          reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    CARACTER        reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    REAL            reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    CADENA          reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    BOOLEANO        reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    FIN             reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    FINMIENTRAS     reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    SINO            reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    FINSI           reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    FINPARA         reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    )               reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    OPOR            reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    OPAND           reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    OPXOR           reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    ,               reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54

  ! +               [ reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .) ]
  ! -               [ reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .) ]
  ! *               [ reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .) ]
  ! /               [ reduce using rule 11 (operacion -> operacion MENORIGUAL operacion .) ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 84

    (12) operacion -> operacion IGUAL operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    MAYORIGUAL      reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    MENORIGUAL      reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    IGUAL           reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    DIFERENTE       reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    <               reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    >               reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    ID              reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    MIENTRAS        reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    SI              reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    PARA            reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    LEER            reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    ESCRIBIR        reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    ENTERO          reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    CARACTER        reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    REAL            reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    CADENA          reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    BOOLEANO        reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    FIN             reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    FINMIENTRAS     reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    SINO            reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    FINSI           reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    FINPARA         reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    )               reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    OPOR            reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    OPAND           reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    OPXOR           reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    ,               reduce using rule 12 (operacion -> operacion IGUAL operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54

  ! +               [ reduce using rule 12 (operacion -> operacion IGUAL operacion .) ]
  ! -               [ reduce using rule 12 (operacion -> operacion IGUAL operacion .) ]
  ! *               [ reduce using rule 12 (operacion -> operacion IGUAL operacion .) ]
  ! /               [ reduce using rule 12 (operacion -> operacion IGUAL operacion .) ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 85

    (13) operacion -> operacion DIFERENTE operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    MAYORIGUAL      reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    MENORIGUAL      reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    IGUAL           reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    DIFERENTE       reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    <               reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    >               reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    ID              reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    MIENTRAS        reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    SI              reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    PARA            reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    LEER            reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    ESCRIBIR        reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    ENTERO          reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    CARACTER        reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    REAL            reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    CADENA          reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    BOOLEANO        reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    FIN             reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    FINMIENTRAS     reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    SINO            reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    FINSI           reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    FINPARA         reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    )               reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    OPOR            reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    OPAND           reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    OPXOR           reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    ,               reduce using rule 13 (operacion -> operacion DIFERENTE operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54

  ! +               [ reduce using rule 13 (operacion -> operacion DIFERENTE operacion .) ]
  ! -               [ reduce using rule 13 (operacion -> operacion DIFERENTE operacion .) ]
  ! *               [ reduce using rule 13 (operacion -> operacion DIFERENTE operacion .) ]
  ! /               [ reduce using rule 13 (operacion -> operacion DIFERENTE operacion .) ]
  ! MAYORIGUAL      [ shift and go to state 55 ]
  ! MENORIGUAL      [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! DIFERENTE       [ shift and go to state 58 ]
  ! <               [ shift and go to state 59 ]
  ! >               [ shift and go to state 60 ]


state 86

    (14) operacion -> operacion < operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
    ID              reduce using rule 14 (operacion -> operacion < operacion .)
    MIENTRAS        reduce using rule 14 (operacion -> operacion < operacion .)
    SI              reduce using rule 14 (operacion -> operacion < operacion .)
    PARA            reduce using rule 14 (operacion -> operacion < operacion .)
    LEER            reduce using rule 14 (operacion -> operacion < operacion .)
    ESCRIBIR        reduce using rule 14 (operacion -> operacion < operacion .)
    ENTERO          reduce using rule 14 (operacion -> operacion < operacion .)
    CARACTER        reduce using rule 14 (operacion -> operacion < operacion .)
    REAL            reduce using rule 14 (operacion -> operacion < operacion .)
    CADENA          reduce using rule 14 (operacion -> operacion < operacion .)
    BOOLEANO        reduce using rule 14 (operacion -> operacion < operacion .)
    FIN             reduce using rule 14 (operacion -> operacion < operacion .)
    FINMIENTRAS     reduce using rule 14 (operacion -> operacion < operacion .)
    SINO            reduce using rule 14 (operacion -> operacion < operacion .)
    FINSI           reduce using rule 14 (operacion -> operacion < operacion .)
    FINPARA         reduce using rule 14 (operacion -> operacion < operacion .)
    )               reduce using rule 14 (operacion -> operacion < operacion .)
    OPOR            reduce using rule 14 (operacion -> operacion < operacion .)
    OPAND           reduce using rule 14 (operacion -> operacion < operacion .)
    OPXOR           reduce using rule 14 (operacion -> operacion < operacion .)
    ,               reduce using rule 14 (operacion -> operacion < operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60

  ! +               [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! -               [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! *               [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! /               [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! MAYORIGUAL      [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! MENORIGUAL      [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! IGUAL           [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! DIFERENTE       [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! <               [ reduce using rule 14 (operacion -> operacion < operacion .) ]
  ! >               [ reduce using rule 14 (operacion -> operacion < operacion .) ]


state 87

    (15) operacion -> operacion > operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
    ID              reduce using rule 15 (operacion -> operacion > operacion .)
    MIENTRAS        reduce using rule 15 (operacion -> operacion > operacion .)
    SI              reduce using rule 15 (operacion -> operacion > operacion .)
    PARA            reduce using rule 15 (operacion -> operacion > operacion .)
    LEER            reduce using rule 15 (operacion -> operacion > operacion .)
    ESCRIBIR        reduce using rule 15 (operacion -> operacion > operacion .)
    ENTERO          reduce using rule 15 (operacion -> operacion > operacion .)
    CARACTER        reduce using rule 15 (operacion -> operacion > operacion .)
    REAL            reduce using rule 15 (operacion -> operacion > operacion .)
    CADENA          reduce using rule 15 (operacion -> operacion > operacion .)
    BOOLEANO        reduce using rule 15 (operacion -> operacion > operacion .)
    FIN             reduce using rule 15 (operacion -> operacion > operacion .)
    FINMIENTRAS     reduce using rule 15 (operacion -> operacion > operacion .)
    SINO            reduce using rule 15 (operacion -> operacion > operacion .)
    FINSI           reduce using rule 15 (operacion -> operacion > operacion .)
    FINPARA         reduce using rule 15 (operacion -> operacion > operacion .)
    )               reduce using rule 15 (operacion -> operacion > operacion .)
    OPOR            reduce using rule 15 (operacion -> operacion > operacion .)
    OPAND           reduce using rule 15 (operacion -> operacion > operacion .)
    OPXOR           reduce using rule 15 (operacion -> operacion > operacion .)
    ,               reduce using rule 15 (operacion -> operacion > operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60

  ! +               [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! -               [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! *               [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! /               [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! MAYORIGUAL      [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! MENORIGUAL      [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! IGUAL           [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! DIFERENTE       [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! <               [ reduce using rule 15 (operacion -> operacion > operacion .) ]
  ! >               [ reduce using rule 15 (operacion -> operacion > operacion .) ]


state 88

    (16) operacion -> ( operacion ) .

    +               reduce using rule 16 (operacion -> ( operacion ) .)
    -               reduce using rule 16 (operacion -> ( operacion ) .)
    *               reduce using rule 16 (operacion -> ( operacion ) .)
    /               reduce using rule 16 (operacion -> ( operacion ) .)
    MAYORIGUAL      reduce using rule 16 (operacion -> ( operacion ) .)
    MENORIGUAL      reduce using rule 16 (operacion -> ( operacion ) .)
    IGUAL           reduce using rule 16 (operacion -> ( operacion ) .)
    DIFERENTE       reduce using rule 16 (operacion -> ( operacion ) .)
    <               reduce using rule 16 (operacion -> ( operacion ) .)
    >               reduce using rule 16 (operacion -> ( operacion ) .)
    ID              reduce using rule 16 (operacion -> ( operacion ) .)
    MIENTRAS        reduce using rule 16 (operacion -> ( operacion ) .)
    SI              reduce using rule 16 (operacion -> ( operacion ) .)
    PARA            reduce using rule 16 (operacion -> ( operacion ) .)
    LEER            reduce using rule 16 (operacion -> ( operacion ) .)
    ESCRIBIR        reduce using rule 16 (operacion -> ( operacion ) .)
    ENTERO          reduce using rule 16 (operacion -> ( operacion ) .)
    CARACTER        reduce using rule 16 (operacion -> ( operacion ) .)
    REAL            reduce using rule 16 (operacion -> ( operacion ) .)
    CADENA          reduce using rule 16 (operacion -> ( operacion ) .)
    BOOLEANO        reduce using rule 16 (operacion -> ( operacion ) .)
    FIN             reduce using rule 16 (operacion -> ( operacion ) .)
    FINMIENTRAS     reduce using rule 16 (operacion -> ( operacion ) .)
    SINO            reduce using rule 16 (operacion -> ( operacion ) .)
    FINSI           reduce using rule 16 (operacion -> ( operacion ) .)
    FINPARA         reduce using rule 16 (operacion -> ( operacion ) .)
    )               reduce using rule 16 (operacion -> ( operacion ) .)
    OPOR            reduce using rule 16 (operacion -> ( operacion ) .)
    OPAND           reduce using rule 16 (operacion -> ( operacion ) .)
    OPXOR           reduce using rule 16 (operacion -> ( operacion ) .)
    ,               reduce using rule 16 (operacion -> ( operacion ) .)


state 89

    (29) declaracion -> tipo defineTipo : ID listaVar .

    ID              reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    MIENTRAS        reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    SI              reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    PARA            reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    LEER            reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    ESCRIBIR        reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    ENTERO          reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    CARACTER        reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    REAL            reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    CADENA          reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    BOOLEANO        reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    FIN             reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    FINMIENTRAS     reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    SINO            reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    FINSI           reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)
    FINPARA         reduce using rule 29 (declaracion -> tipo defineTipo : ID listaVar .)


state 90

    (30) declaracion -> tipo defineTipo : ID = . operacion listaVar
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 102

state 91

    (32) listaVar -> , . ID listaVar
    (34) listaVar -> , . ID = operacion listaVar

    ID              shift and go to state 103


state 92

    (45) operacionLogica -> ( operacionLogica ) .

    )               reduce using rule 45 (operacionLogica -> ( operacionLogica ) .)
    OPOR            reduce using rule 45 (operacionLogica -> ( operacionLogica ) .)
    OPAND           reduce using rule 45 (operacionLogica -> ( operacionLogica ) .)
    OPXOR           reduce using rule 45 (operacionLogica -> ( operacionLogica ) .)


state 93

    (67) mientras -> MIENTRAS ( operacionLogica ) HACER . instrucciones FINMIENTRAS
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    FINMIENTRAS     reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 104
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 94

    (41) operacionLogica -> operacionLogica OPOR operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    )               reduce using rule 41 (operacionLogica -> operacionLogica OPOR operacion .)
    OPOR            reduce using rule 41 (operacionLogica -> operacionLogica OPOR operacion .)
    OPAND           reduce using rule 41 (operacionLogica -> operacionLogica OPOR operacion .)
    OPXOR           reduce using rule 41 (operacionLogica -> operacionLogica OPOR operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 95

    (42) operacionLogica -> operacionLogica OPAND operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    )               reduce using rule 42 (operacionLogica -> operacionLogica OPAND operacion .)
    OPOR            reduce using rule 42 (operacionLogica -> operacionLogica OPAND operacion .)
    OPAND           reduce using rule 42 (operacionLogica -> operacionLogica OPAND operacion .)
    OPXOR           reduce using rule 42 (operacionLogica -> operacionLogica OPAND operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 96

    (43) operacionLogica -> operacionLogica OPXOR operacion .
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion

    )               reduce using rule 43 (operacionLogica -> operacionLogica OPXOR operacion .)
    OPOR            reduce using rule 43 (operacionLogica -> operacionLogica OPXOR operacion .)
    OPAND           reduce using rule 43 (operacionLogica -> operacionLogica OPXOR operacion .)
    OPXOR           reduce using rule 43 (operacionLogica -> operacionLogica OPXOR operacion .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60


state 97

    (61) si -> SI ( operacionLogica ) ENTONCES . instrucciones sino FINSI
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    SINO            reduce using rule 3 (instrucciones -> .)
    FINSI           reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 105
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 98

    (62) si -> SI ( operacionLogica ) OPAND . ( operacionLogica ) ENTONCES instrucciones sino FINSI

    (               shift and go to state 106


state 99

    (63) si -> SI ( operacionLogica ) OPOR . ( operacionLogica ) ENTONCES instrucciones sino FINSI

    (               shift and go to state 107


state 100

    (64) si -> SI ( operacionLogica ) OPXOR . ( operacionLogica ) ENTONCES instrucciones sino FINSI

    (               shift and go to state 108


state 101

    (68) para -> PARA ID = numero HASTA . numero inc instrucciones FINPARA
    (27) numero -> . NUMEROENTERO
    (28) numero -> . NUMEROREAL

    NUMEROENTERO    shift and go to state 73
    NUMEROREAL      shift and go to state 74

    numero                         shift and go to state 109

state 102

    (30) declaracion -> tipo defineTipo : ID = operacion . listaVar
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion
    (32) listaVar -> . , ID listaVar
    (33) listaVar -> .
    (34) listaVar -> . , ID = operacion listaVar

    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60
    ,               shift and go to state 91
    ID              reduce using rule 33 (listaVar -> .)
    MIENTRAS        reduce using rule 33 (listaVar -> .)
    SI              reduce using rule 33 (listaVar -> .)
    PARA            reduce using rule 33 (listaVar -> .)
    LEER            reduce using rule 33 (listaVar -> .)
    ESCRIBIR        reduce using rule 33 (listaVar -> .)
    ENTERO          reduce using rule 33 (listaVar -> .)
    CARACTER        reduce using rule 33 (listaVar -> .)
    REAL            reduce using rule 33 (listaVar -> .)
    CADENA          reduce using rule 33 (listaVar -> .)
    BOOLEANO        reduce using rule 33 (listaVar -> .)
    FIN             reduce using rule 33 (listaVar -> .)
    FINMIENTRAS     reduce using rule 33 (listaVar -> .)
    SINO            reduce using rule 33 (listaVar -> .)
    FINSI           reduce using rule 33 (listaVar -> .)
    FINPARA         reduce using rule 33 (listaVar -> .)

    listaVar                       shift and go to state 110

state 103

    (32) listaVar -> , ID . listaVar
    (34) listaVar -> , ID . = operacion listaVar
    (32) listaVar -> . , ID listaVar
    (33) listaVar -> .
    (34) listaVar -> . , ID = operacion listaVar

    =               shift and go to state 112
    ,               shift and go to state 91
    ID              reduce using rule 33 (listaVar -> .)
    MIENTRAS        reduce using rule 33 (listaVar -> .)
    SI              reduce using rule 33 (listaVar -> .)
    PARA            reduce using rule 33 (listaVar -> .)
    LEER            reduce using rule 33 (listaVar -> .)
    ESCRIBIR        reduce using rule 33 (listaVar -> .)
    ENTERO          reduce using rule 33 (listaVar -> .)
    CARACTER        reduce using rule 33 (listaVar -> .)
    REAL            reduce using rule 33 (listaVar -> .)
    CADENA          reduce using rule 33 (listaVar -> .)
    BOOLEANO        reduce using rule 33 (listaVar -> .)
    FIN             reduce using rule 33 (listaVar -> .)
    FINMIENTRAS     reduce using rule 33 (listaVar -> .)
    SINO            reduce using rule 33 (listaVar -> .)
    FINSI           reduce using rule 33 (listaVar -> .)
    FINPARA         reduce using rule 33 (listaVar -> .)

    listaVar                       shift and go to state 111

state 104

    (67) mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones . FINMIENTRAS

    FINMIENTRAS     shift and go to state 113


state 105

    (61) si -> SI ( operacionLogica ) ENTONCES instrucciones . sino FINSI
    (65) sino -> .
    (66) sino -> . SINO instrucciones

    FINSI           reduce using rule 65 (sino -> .)
    SINO            shift and go to state 115

    sino                           shift and go to state 114

state 106

    (62) si -> SI ( operacionLogica ) OPAND ( . operacionLogica ) ENTONCES instrucciones sino FINSI
    (40) operacionLogica -> . operacion
    (41) operacionLogica -> . operacionLogica OPOR operacion
    (42) operacionLogica -> . operacionLogica OPAND operacion
    (43) operacionLogica -> . operacionLogica OPXOR operacion
    (44) operacionLogica -> . OPNOT operacion
    (45) operacionLogica -> . ( operacionLogica )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    OPNOT           shift and go to state 45
    (               shift and go to state 42
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacionLogica                shift and go to state 116
    operacion                      shift and go to state 44

state 107

    (63) si -> SI ( operacionLogica ) OPOR ( . operacionLogica ) ENTONCES instrucciones sino FINSI
    (40) operacionLogica -> . operacion
    (41) operacionLogica -> . operacionLogica OPOR operacion
    (42) operacionLogica -> . operacionLogica OPAND operacion
    (43) operacionLogica -> . operacionLogica OPXOR operacion
    (44) operacionLogica -> . OPNOT operacion
    (45) operacionLogica -> . ( operacionLogica )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    OPNOT           shift and go to state 45
    (               shift and go to state 42
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacionLogica                shift and go to state 117
    operacion                      shift and go to state 44

state 108

    (64) si -> SI ( operacionLogica ) OPXOR ( . operacionLogica ) ENTONCES instrucciones sino FINSI
    (40) operacionLogica -> . operacion
    (41) operacionLogica -> . operacionLogica OPOR operacion
    (42) operacionLogica -> . operacionLogica OPAND operacion
    (43) operacionLogica -> . operacionLogica OPXOR operacion
    (44) operacionLogica -> . OPNOT operacion
    (45) operacionLogica -> . ( operacionLogica )
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
    OPNOT           shift and go to state 45
    (               shift and go to state 42
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    )               reduce using rule 5 (operacion -> .)
    OPOR            reduce using rule 5 (operacion -> .)
    OPAND           reduce using rule 5 (operacion -> .)
    OPXOR           reduce using rule 5 (operacion -> .)
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]

    operacionLogica                shift and go to state 118
    operacion                      shift and go to state 44

state 109

    (68) para -> PARA ID = numero HASTA numero . inc instrucciones FINPARA
    (69) inc -> . INC numero
    (70) inc -> .

    INC             shift and go to state 120
    ID              reduce using rule 70 (inc -> .)
    MIENTRAS        reduce using rule 70 (inc -> .)
    SI              reduce using rule 70 (inc -> .)
    PARA            reduce using rule 70 (inc -> .)
    LEER            reduce using rule 70 (inc -> .)
    ESCRIBIR        reduce using rule 70 (inc -> .)
    ENTERO          reduce using rule 70 (inc -> .)
    CARACTER        reduce using rule 70 (inc -> .)
    REAL            reduce using rule 70 (inc -> .)
    CADENA          reduce using rule 70 (inc -> .)
    BOOLEANO        reduce using rule 70 (inc -> .)
    FINPARA         reduce using rule 70 (inc -> .)

    inc                            shift and go to state 119

state 110

    (30) declaracion -> tipo defineTipo : ID = operacion listaVar .

    ID              reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    MIENTRAS        reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    SI              reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    PARA            reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    LEER            reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    ESCRIBIR        reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    ENTERO          reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    CARACTER        reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    REAL            reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    CADENA          reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    BOOLEANO        reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    FIN             reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    FINMIENTRAS     reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    SINO            reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    FINSI           reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)
    FINPARA         reduce using rule 30 (declaracion -> tipo defineTipo : ID = operacion listaVar .)


state 111

    (32) listaVar -> , ID listaVar .

    ID              reduce using rule 32 (listaVar -> , ID listaVar .)
    MIENTRAS        reduce using rule 32 (listaVar -> , ID listaVar .)
    SI              reduce using rule 32 (listaVar -> , ID listaVar .)
    PARA            reduce using rule 32 (listaVar -> , ID listaVar .)
    LEER            reduce using rule 32 (listaVar -> , ID listaVar .)
    ESCRIBIR        reduce using rule 32 (listaVar -> , ID listaVar .)
    ENTERO          reduce using rule 32 (listaVar -> , ID listaVar .)
    CARACTER        reduce using rule 32 (listaVar -> , ID listaVar .)
    REAL            reduce using rule 32 (listaVar -> , ID listaVar .)
    CADENA          reduce using rule 32 (listaVar -> , ID listaVar .)
    BOOLEANO        reduce using rule 32 (listaVar -> , ID listaVar .)
    FIN             reduce using rule 32 (listaVar -> , ID listaVar .)
    FINMIENTRAS     reduce using rule 32 (listaVar -> , ID listaVar .)
    SINO            reduce using rule 32 (listaVar -> , ID listaVar .)
    FINSI           reduce using rule 32 (listaVar -> , ID listaVar .)
    FINPARA         reduce using rule 32 (listaVar -> , ID listaVar .)


state 112

    (34) listaVar -> , ID = . operacion listaVar
    (5) operacion -> .
    (6) operacion -> . operacion + operacion
    (7) operacion -> . operacion - operacion
    (8) operacion -> . operacion * operacion
    (9) operacion -> . operacion / operacion
    (10) operacion -> . operacion MAYORIGUAL operacion
    (11) operacion -> . operacion MENORIGUAL operacion
    (12) operacion -> . operacion IGUAL operacion
    (13) operacion -> . operacion DIFERENTE operacion
    (14) operacion -> . operacion < operacion
    (15) operacion -> . operacion > operacion
    (16) operacion -> . ( operacion )
    (17) operacion -> . - operacion
    (18) operacion -> . ID
    (19) operacion -> . NUMEROENTERO

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    +               reduce using rule 5 (operacion -> .)
    *               reduce using rule 5 (operacion -> .)
    /               reduce using rule 5 (operacion -> .)
    MAYORIGUAL      reduce using rule 5 (operacion -> .)
    MENORIGUAL      reduce using rule 5 (operacion -> .)
    IGUAL           reduce using rule 5 (operacion -> .)
    DIFERENTE       reduce using rule 5 (operacion -> .)
    <               reduce using rule 5 (operacion -> .)
    >               reduce using rule 5 (operacion -> .)
    ,               reduce using rule 5 (operacion -> .)
    MIENTRAS        reduce using rule 5 (operacion -> .)
    SI              reduce using rule 5 (operacion -> .)
    PARA            reduce using rule 5 (operacion -> .)
    LEER            reduce using rule 5 (operacion -> .)
    ESCRIBIR        reduce using rule 5 (operacion -> .)
    ENTERO          reduce using rule 5 (operacion -> .)
    CARACTER        reduce using rule 5 (operacion -> .)
    REAL            reduce using rule 5 (operacion -> .)
    CADENA          reduce using rule 5 (operacion -> .)
    BOOLEANO        reduce using rule 5 (operacion -> .)
    FIN             reduce using rule 5 (operacion -> .)
    FINMIENTRAS     reduce using rule 5 (operacion -> .)
    SINO            reduce using rule 5 (operacion -> .)
    FINSI           reduce using rule 5 (operacion -> .)
    FINPARA         reduce using rule 5 (operacion -> .)
    (               shift and go to state 39
    -               shift and go to state 38
    ID              shift and go to state 36
    NUMEROENTERO    shift and go to state 40

  ! -               [ reduce using rule 5 (operacion -> .) ]
  ! ID              [ reduce using rule 5 (operacion -> .) ]

    operacion                      shift and go to state 121

state 113

    (67) mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .

    ID              reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    MIENTRAS        reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    SI              reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    PARA            reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    LEER            reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    ESCRIBIR        reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    ENTERO          reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    CARACTER        reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    REAL            reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    CADENA          reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    BOOLEANO        reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    FIN             reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    FINMIENTRAS     reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    SINO            reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    FINSI           reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)
    FINPARA         reduce using rule 67 (mientras -> MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS .)


state 114

    (61) si -> SI ( operacionLogica ) ENTONCES instrucciones sino . FINSI

    FINSI           shift and go to state 122


state 115

    (66) sino -> SINO . instrucciones
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    FINSI           reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 123
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 116

    (62) si -> SI ( operacionLogica ) OPAND ( operacionLogica . ) ENTONCES instrucciones sino FINSI
    (41) operacionLogica -> operacionLogica . OPOR operacion
    (42) operacionLogica -> operacionLogica . OPAND operacion
    (43) operacionLogica -> operacionLogica . OPXOR operacion

    )               shift and go to state 124
    OPOR            shift and go to state 67
    OPAND           shift and go to state 68
    OPXOR           shift and go to state 69


state 117

    (63) si -> SI ( operacionLogica ) OPOR ( operacionLogica . ) ENTONCES instrucciones sino FINSI
    (41) operacionLogica -> operacionLogica . OPOR operacion
    (42) operacionLogica -> operacionLogica . OPAND operacion
    (43) operacionLogica -> operacionLogica . OPXOR operacion

    )               shift and go to state 125
    OPOR            shift and go to state 67
    OPAND           shift and go to state 68
    OPXOR           shift and go to state 69


state 118

    (64) si -> SI ( operacionLogica ) OPXOR ( operacionLogica . ) ENTONCES instrucciones sino FINSI
    (41) operacionLogica -> operacionLogica . OPOR operacion
    (42) operacionLogica -> operacionLogica . OPAND operacion
    (43) operacionLogica -> operacionLogica . OPXOR operacion

    )               shift and go to state 126
    OPOR            shift and go to state 67
    OPAND           shift and go to state 68
    OPXOR           shift and go to state 69


state 119

    (68) para -> PARA ID = numero HASTA numero inc . instrucciones FINPARA
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    FINPARA         reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 127
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 120

    (69) inc -> INC . numero
    (27) numero -> . NUMEROENTERO
    (28) numero -> . NUMEROREAL

    NUMEROENTERO    shift and go to state 73
    NUMEROREAL      shift and go to state 74

    numero                         shift and go to state 128

state 121

    (34) listaVar -> , ID = operacion . listaVar
    (6) operacion -> operacion . + operacion
    (7) operacion -> operacion . - operacion
    (8) operacion -> operacion . * operacion
    (9) operacion -> operacion . / operacion
    (10) operacion -> operacion . MAYORIGUAL operacion
    (11) operacion -> operacion . MENORIGUAL operacion
    (12) operacion -> operacion . IGUAL operacion
    (13) operacion -> operacion . DIFERENTE operacion
    (14) operacion -> operacion . < operacion
    (15) operacion -> operacion . > operacion
    (32) listaVar -> . , ID listaVar
    (33) listaVar -> .
    (34) listaVar -> . , ID = operacion listaVar

    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    MAYORIGUAL      shift and go to state 55
    MENORIGUAL      shift and go to state 56
    IGUAL           shift and go to state 57
    DIFERENTE       shift and go to state 58
    <               shift and go to state 59
    >               shift and go to state 60
    ,               shift and go to state 91
    ID              reduce using rule 33 (listaVar -> .)
    MIENTRAS        reduce using rule 33 (listaVar -> .)
    SI              reduce using rule 33 (listaVar -> .)
    PARA            reduce using rule 33 (listaVar -> .)
    LEER            reduce using rule 33 (listaVar -> .)
    ESCRIBIR        reduce using rule 33 (listaVar -> .)
    ENTERO          reduce using rule 33 (listaVar -> .)
    CARACTER        reduce using rule 33 (listaVar -> .)
    REAL            reduce using rule 33 (listaVar -> .)
    CADENA          reduce using rule 33 (listaVar -> .)
    BOOLEANO        reduce using rule 33 (listaVar -> .)
    FIN             reduce using rule 33 (listaVar -> .)
    FINMIENTRAS     reduce using rule 33 (listaVar -> .)
    SINO            reduce using rule 33 (listaVar -> .)
    FINSI           reduce using rule 33 (listaVar -> .)
    FINPARA         reduce using rule 33 (listaVar -> .)

    listaVar                       shift and go to state 129

state 122

    (61) si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .

    ID              reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    MIENTRAS        reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SI              reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    PARA            reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    LEER            reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ESCRIBIR        reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ENTERO          reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CARACTER        reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    REAL            reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CADENA          reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    BOOLEANO        reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FIN             reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINMIENTRAS     reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SINO            reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINSI           reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINPARA         reduce using rule 61 (si -> SI ( operacionLogica ) ENTONCES instrucciones sino FINSI .)


state 123

    (66) sino -> SINO instrucciones .

    FINSI           reduce using rule 66 (sino -> SINO instrucciones .)


state 124

    (62) si -> SI ( operacionLogica ) OPAND ( operacionLogica ) . ENTONCES instrucciones sino FINSI

    ENTONCES        shift and go to state 130


state 125

    (63) si -> SI ( operacionLogica ) OPOR ( operacionLogica ) . ENTONCES instrucciones sino FINSI

    ENTONCES        shift and go to state 131


state 126

    (64) si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) . ENTONCES instrucciones sino FINSI

    ENTONCES        shift and go to state 132


state 127

    (68) para -> PARA ID = numero HASTA numero inc instrucciones . FINPARA

    FINPARA         shift and go to state 133


state 128

    (69) inc -> INC numero .

    ID              reduce using rule 69 (inc -> INC numero .)
    MIENTRAS        reduce using rule 69 (inc -> INC numero .)
    SI              reduce using rule 69 (inc -> INC numero .)
    PARA            reduce using rule 69 (inc -> INC numero .)
    LEER            reduce using rule 69 (inc -> INC numero .)
    ESCRIBIR        reduce using rule 69 (inc -> INC numero .)
    ENTERO          reduce using rule 69 (inc -> INC numero .)
    CARACTER        reduce using rule 69 (inc -> INC numero .)
    REAL            reduce using rule 69 (inc -> INC numero .)
    CADENA          reduce using rule 69 (inc -> INC numero .)
    BOOLEANO        reduce using rule 69 (inc -> INC numero .)
    FINPARA         reduce using rule 69 (inc -> INC numero .)


state 129

    (34) listaVar -> , ID = operacion listaVar .

    ID              reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    MIENTRAS        reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    SI              reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    PARA            reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    LEER            reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    ESCRIBIR        reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    ENTERO          reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    CARACTER        reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    REAL            reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    CADENA          reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    BOOLEANO        reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    FIN             reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    FINMIENTRAS     reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    SINO            reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    FINSI           reduce using rule 34 (listaVar -> , ID = operacion listaVar .)
    FINPARA         reduce using rule 34 (listaVar -> , ID = operacion listaVar .)


state 130

    (62) si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES . instrucciones sino FINSI
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    SINO            reduce using rule 3 (instrucciones -> .)
    FINSI           reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 134
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 131

    (63) si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES . instrucciones sino FINSI
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    SINO            reduce using rule 3 (instrucciones -> .)
    FINSI           reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 135
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 132

    (64) si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES . instrucciones sino FINSI
    (2) instrucciones -> . instruccion instrucciones
    (3) instrucciones -> .
    (20) instruccion -> . declaracion
    (21) instruccion -> . asignacion
    (22) instruccion -> . mientras
    (23) instruccion -> . si
    (24) instruccion -> . para
    (25) instruccion -> . lectura
    (26) instruccion -> . escritura
    (29) declaracion -> . tipo defineTipo : ID listaVar
    (30) declaracion -> . tipo defineTipo : ID = operacion listaVar
    (4) asignacion -> . ID = operacion
    (67) mientras -> . MIENTRAS ( operacionLogica ) HACER instrucciones FINMIENTRAS
    (61) si -> . SI ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (62) si -> . SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (63) si -> . SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (64) si -> . SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI
    (68) para -> . PARA ID = numero HASTA numero inc instrucciones FINPARA
    (58) lectura -> . LEER ( ID )
    (59) escritura -> . ESCRIBIR ( CADENALITERAL )
    (60) escritura -> . ESCRIBIR ( operacion )
    (35) tipo -> . ENTERO
    (36) tipo -> . CARACTER
    (37) tipo -> . REAL
    (38) tipo -> . CADENA
    (39) tipo -> . BOOLEANO

    SINO            reduce using rule 3 (instrucciones -> .)
    FINSI           reduce using rule 3 (instrucciones -> .)
    ID              shift and go to state 6
    MIENTRAS        shift and go to state 17
    SI              shift and go to state 18
    PARA            shift and go to state 19
    LEER            shift and go to state 20
    ESCRIBIR        shift and go to state 21
    ENTERO          shift and go to state 22
    CARACTER        shift and go to state 23
    REAL            shift and go to state 24
    CADENA          shift and go to state 25
    BOOLEANO        shift and go to state 26

    instrucciones                  shift and go to state 136
    instruccion                    shift and go to state 8
    declaracion                    shift and go to state 9
    asignacion                     shift and go to state 10
    mientras                       shift and go to state 11
    si                             shift and go to state 12
    para                           shift and go to state 13
    lectura                        shift and go to state 14
    escritura                      shift and go to state 15
    tipo                           shift and go to state 16

state 133

    (68) para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .

    ID              reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    MIENTRAS        reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    SI              reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    PARA            reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    LEER            reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    ESCRIBIR        reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    ENTERO          reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    CARACTER        reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    REAL            reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    CADENA          reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    BOOLEANO        reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    FIN             reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    FINMIENTRAS     reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    SINO            reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    FINSI           reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)
    FINPARA         reduce using rule 68 (para -> PARA ID = numero HASTA numero inc instrucciones FINPARA .)


state 134

    (62) si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones . sino FINSI
    (65) sino -> .
    (66) sino -> . SINO instrucciones

    FINSI           reduce using rule 65 (sino -> .)
    SINO            shift and go to state 115

    sino                           shift and go to state 137

state 135

    (63) si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones . sino FINSI
    (65) sino -> .
    (66) sino -> . SINO instrucciones

    FINSI           reduce using rule 65 (sino -> .)
    SINO            shift and go to state 115

    sino                           shift and go to state 138

state 136

    (64) si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones . sino FINSI
    (65) sino -> .
    (66) sino -> . SINO instrucciones

    FINSI           reduce using rule 65 (sino -> .)
    SINO            shift and go to state 115

    sino                           shift and go to state 139

state 137

    (62) si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino . FINSI

    FINSI           shift and go to state 140


state 138

    (63) si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino . FINSI

    FINSI           shift and go to state 141


state 139

    (64) si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino . FINSI

    FINSI           shift and go to state 142


state 140

    (62) si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .

    ID              reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    MIENTRAS        reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SI              reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    PARA            reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    LEER            reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ESCRIBIR        reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ENTERO          reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CARACTER        reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    REAL            reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CADENA          reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    BOOLEANO        reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FIN             reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINMIENTRAS     reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SINO            reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINSI           reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINPARA         reduce using rule 62 (si -> SI ( operacionLogica ) OPAND ( operacionLogica ) ENTONCES instrucciones sino FINSI .)


state 141

    (63) si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .

    ID              reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    MIENTRAS        reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SI              reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    PARA            reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    LEER            reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ESCRIBIR        reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ENTERO          reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CARACTER        reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    REAL            reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CADENA          reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    BOOLEANO        reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FIN             reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINMIENTRAS     reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SINO            reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINSI           reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINPARA         reduce using rule 63 (si -> SI ( operacionLogica ) OPOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)


state 142

    (64) si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .

    ID              reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    MIENTRAS        reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SI              reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    PARA            reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    LEER            reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ESCRIBIR        reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    ENTERO          reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CARACTER        reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    REAL            reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    CADENA          reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    BOOLEANO        reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FIN             reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINMIENTRAS     reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    SINO            reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINSI           reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)
    FINPARA         reduce using rule 64 (si -> SI ( operacionLogica ) OPXOR ( operacionLogica ) ENTONCES instrucciones sino FINSI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for - in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for - in state 31 resolved as shift
WARNING: shift/reduce conflict for - in state 32 resolved as shift
WARNING: shift/reduce conflict for - in state 35 resolved as shift
WARNING: shift/reduce conflict for - in state 38 resolved as shift
WARNING: shift/reduce conflict for ID in state 38 resolved as shift
WARNING: shift/reduce conflict for - in state 39 resolved as shift
WARNING: shift/reduce conflict for - in state 42 resolved as shift
WARNING: shift/reduce conflict for - in state 45 resolved as shift
WARNING: shift/reduce conflict for - in state 51 resolved as shift
WARNING: shift/reduce conflict for ID in state 51 resolved as shift
WARNING: shift/reduce conflict for - in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for - in state 54 resolved as shift
WARNING: shift/reduce conflict for ID in state 54 resolved as shift
WARNING: shift/reduce conflict for - in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for - in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for - in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for - in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for ) in state 65 resolved as shift
WARNING: shift/reduce conflict for - in state 67 resolved as shift
WARNING: shift/reduce conflict for - in state 68 resolved as shift
WARNING: shift/reduce conflict for - in state 69 resolved as shift
WARNING: shift/reduce conflict for + in state 86 resolved as shift
WARNING: shift/reduce conflict for - in state 86 resolved as shift
WARNING: shift/reduce conflict for * in state 86 resolved as shift
WARNING: shift/reduce conflict for / in state 86 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 86 resolved as shift
WARNING: shift/reduce conflict for < in state 86 resolved as shift
WARNING: shift/reduce conflict for > in state 86 resolved as shift
WARNING: shift/reduce conflict for + in state 87 resolved as shift
WARNING: shift/reduce conflict for - in state 87 resolved as shift
WARNING: shift/reduce conflict for * in state 87 resolved as shift
WARNING: shift/reduce conflict for / in state 87 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 87 resolved as shift
WARNING: shift/reduce conflict for < in state 87 resolved as shift
WARNING: shift/reduce conflict for > in state 87 resolved as shift
WARNING: shift/reduce conflict for - in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for - in state 106 resolved as shift
WARNING: shift/reduce conflict for - in state 107 resolved as shift
WARNING: shift/reduce conflict for - in state 108 resolved as shift
WARNING: shift/reduce conflict for - in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 112 resolved as shift
